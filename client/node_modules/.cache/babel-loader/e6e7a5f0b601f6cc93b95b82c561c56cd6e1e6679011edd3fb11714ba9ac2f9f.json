{"ast":null,"code":"import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport API from './../api/axiosConfig';\nconst useAuthStore = create()(devtools(immer((set, get) => ({\n  errText: '',\n  isLogged: false,\n  isRegistered: false,\n  register: async (email, username, password) => {\n    await API.post(`/auth/register`, {\n      email,\n      username,\n      password\n    }).then(res => {\n      if (res.data.message === 'Success') {\n        set({\n          isRegistered: true\n        });\n      }\n    });\n  },\n  login: async (email, password) => {\n    await API.post(`/auth/login`, {\n      email,\n      password\n    }).then(data => {\n      if (data.data.accessToken) {\n        localStorage.setItem('token', data.data.accessToken);\n        set({\n          isLogged: true\n        });\n      } else {\n        set({\n          errText: 'Invalid email or password'\n        });\n        set({\n          isLogged: false\n        });\n      }\n    });\n  },\n  logout: async () => {\n    await API.post(`/auth/logout`).then(res => {\n      console.log(res);\n      if (res.data.message === 'Success') {\n        localStorage.removeItem('token');\n        set({\n          isLogged: false\n        });\n      } else {\n        console.log('something went wrong');\n      }\n    });\n  },\n  refresh: async () => {\n    await API.get(`/auth/refresh`).then(res => {\n      console.log(res.data.accessToken);\n      if (res.data.accessToken) {\n        localStorage.setItem('token', res.data.accessToken);\n        set({\n          isLogged: true\n        });\n      } else {\n        set({\n          isLogged: false\n        });\n      }\n    }).catch(err => console.log(err));\n  },\n  setError: err => {\n    set({\n      errText: err\n    });\n  },\n  handleIsLogged: val => {\n    set({\n      isLogged: val\n    });\n  },\n  handleIsRegistered: val => {\n    set({\n      isRegistered: val\n    });\n  }\n}))));\nexport default useAuthStore;","map":{"version":3,"names":["create","devtools","immer","API","useAuthStore","set","get","errText","isLogged","isRegistered","register","email","username","password","post","then","res","data","message","login","accessToken","localStorage","setItem","logout","console","log","removeItem","refresh","catch","err","setError","handleIsLogged","val","handleIsRegistered"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { devtools } from 'zustand/middleware';\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from './../api/axiosConfig';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ninterface IStore {\r\n    errText: string,\r\n    isLogged: boolean,\r\n    isRegistered: boolean,\r\n    register: (email: string, username: string, password: string) => void,\r\n    login: (email: string, password: string) => void,\r\n    setError: (err: string) => void,\r\n    logout: () => void,\r\n    refresh: () => void,\r\n    handleIsLogged: (val: boolean) => void,\r\n    handleIsRegistered: (val: boolean) => void\r\n\r\n}\r\n\r\ninterface User {\r\n    _id: string,\r\n    username: string,\r\n    email: string,\r\n    isActivated: boolean,\r\n    likedPosts: [],\r\n    likedComments: [],\r\n    createdTests: [],\r\n    posts: [],\r\n    __v: number,\r\n}\r\n\r\nconst useAuthStore = create<IStore>()(devtools(immer((set, get) => ({\r\n    errText: '',\r\n    isLogged: false,\r\n    isRegistered: false,\r\n    register: async (email: string, username: string, password: string) => {\r\n        await API.post(`/auth/register`, { email, username, password }).then(res => {\r\n            if (res.data.message === 'Success') {\r\n                set({ isRegistered: true });\r\n            }\r\n        });\r\n    },\r\n    login: async (email: string, password: string) => {\r\n        await API.post(`/auth/login`, { email, password }).then((data: AxiosResponse<any>) => {\r\n            if (data.data.accessToken) {\r\n                localStorage.setItem('token', data.data.accessToken);\r\n                set({ isLogged: true });\r\n            } else {\r\n                set({ errText: 'Invalid email or password' });\r\n                set({ isLogged: false });\r\n            }\r\n\r\n        });\r\n    },\r\n    logout: async () => {\r\n        await API.post(`/auth/logout`).then(res => {\r\n            console.log(res)\r\n            if (res.data.message === 'Success') {\r\n                localStorage.removeItem('token');\r\n                set({ isLogged: false });\r\n            } else {\r\n                console.log('something went wrong')\r\n            }\r\n        });\r\n    },\r\n    refresh: async () => {\r\n        await API.get(`/auth/refresh`).then(res => {\r\n            console.log(res.data.accessToken)\r\n            if (res.data.accessToken) {\r\n                localStorage.setItem('token', res.data.accessToken);\r\n                set({ isLogged: true });\r\n            } else {\r\n                set({ isLogged: false });\r\n            }\r\n        }).catch(err => console.log(err))\r\n    },\r\n    setError: (err: string) => {\r\n        set({ errText: err });\r\n    },\r\n    handleIsLogged: (val: boolean) => {\r\n        set({ isLogged: val });\r\n    },\r\n    handleIsRegistered: (val: boolean) => {\r\n        set({ isRegistered: val });\r\n    }\r\n})\r\n),\r\n),\r\n);\r\n\r\nexport default useAuthStore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}