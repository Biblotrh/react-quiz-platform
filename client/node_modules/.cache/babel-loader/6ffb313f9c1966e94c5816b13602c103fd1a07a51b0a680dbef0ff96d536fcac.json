{"ast":null,"code":"import API from './../api/axiosConfig';\nexport function isLoggedIn() {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return false;\n  }\n  const decodedToken = JSON.parse(atob(token.split('.')[1]));\n  if (Math.floor(Date.now() / 1000) > decodedToken.exp) {\n    return false;\n  }\n  return true;\n}\nexport async function refresh() {\n  API.get(`/auth/refresh`).then(res => {\n    if (res.data.accessToken) {\n      localStorage.setItem('token', res.data.accessToken);\n    }\n  });\n}","map":{"version":3,"names":["API","isLoggedIn","token","localStorage","getItem","decodedToken","JSON","parse","atob","split","Math","floor","Date","now","exp","refresh","get","then","res","data","accessToken","setItem"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/services/authService.ts"],"sourcesContent":["import API from './../api/axiosConfig';\r\n\r\nexport function isLoggedIn(): boolean {\r\n    const token = localStorage.getItem('token');\r\n    if(!token) {\r\n        return false;\r\n    }\r\n    const decodedToken = JSON.parse(atob(token.split('.')[1]));\r\n\r\n    if(Math.floor(Date.now() / 1000) > decodedToken.exp) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport async function refresh() {\r\n    API.get(`/auth/refresh`).then(res => {\r\n        if(res.data.accessToken) {\r\n            localStorage.setItem('token', res.data.accessToken);\r\n        }\r\n    })\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,sBAAsB;AAEtC,OAAO,SAASC,UAAUA,CAAA,EAAY;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAG,CAACF,KAAK,EAAE;IACP,OAAO,KAAK;EAChB;EACA,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAE1D,IAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAGR,YAAY,CAACS,GAAG,EAAE;IACjD,OAAO,KAAK;EAChB;EACA,OAAO,IAAI;AACf;AAEA,OAAO,eAAeC,OAAOA,CAAA,EAAG;EAC5Bf,GAAG,CAACgB,GAAG,CAAC,eAAe,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;IACjC,IAAGA,GAAG,CAACC,IAAI,CAACC,WAAW,EAAE;MACrBjB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC;IACvD;EACJ,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}