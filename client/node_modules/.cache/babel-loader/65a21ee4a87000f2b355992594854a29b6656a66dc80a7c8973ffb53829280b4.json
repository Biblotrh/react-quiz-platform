{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const params = useParams();\n  const testId = params.id;\n  const [control, handleSubmit] = useForm();\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, []);\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return test ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: test.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [test.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.question,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.answer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${qIndex}`,\n            value: answer.points\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: answer.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this)]\n        }, aIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this))]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 15\n  }, this);\n}\n_s(TestPage, \"/K5O3xHN+0LYL0qV5eC4HnofspY=\", false, function () {\n  return [useTestStore, useTestStore, useParams, useForm];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","useParams","useTestStore","useForm","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","params","testId","id","control","handleSubmit","onSubmit","data","console","log","className","testPage","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","questions","map","question","qIndex","answers","answer","aIndex","type","value","points","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\ntype FormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const [control, handleSubmit] = useForm<FormValues>();\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId)\r\n        }\r\n    }, []);\r\n\r\n    const onSubmit = (data: FormValues) => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        test ?\r\n            <div className={styles.testPage} >\r\n                <h1>{test.name}</h1>\r\n                <p>{test.description}</p>\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    {test.questions.map((question, qIndex) => (\r\n                        <div key={qIndex} className={styles.question}>\r\n                            <h3>{question.question}</h3>\r\n                            {question.answers.map((answer, aIndex) => (\r\n                                <div key={aIndex} className={styles.answer}>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name={`question-${qIndex}`}\r\n                                        value={answer.points}\r\n                                    />\r\n                                    <label>{answer.answer}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n\r\n                {/*\r\n                    score !== 0 && (\r\n                        <div className={styles.results}>\r\n                            <h2>Your Score: {score}</h2>\r\n                            {test.results.map((result, index) => (\r\n                                score >= result.minScore && score <= result.maxScore ? (\r\n                                    <div key={index}>\r\n                                        <h3>{result.result}</h3>\r\n                                    </div>\r\n                                ) : null\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                */}\r\n            </div >\r\n            : <div className={styles.testPage}><h1>Loading...</h1></div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}