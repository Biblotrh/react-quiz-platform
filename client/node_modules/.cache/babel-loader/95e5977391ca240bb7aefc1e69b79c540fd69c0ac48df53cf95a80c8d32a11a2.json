{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testForm\\\\TestForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './TestForm.module.scss';\nimport { useForm } from 'react-hook-form';\n\n/*name: '',\r\ndescription: '',\r\nauthor: '',\r\nquestions: [],\r\nresults: [],\r\nscore: 0,\r\nlikes: 0,\r\ncomments: [],\r\ncreatedAt: new Date(),\r\nisUpdated: []*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestForm() {\n  _s();\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTest({\n      ...test,\n      [name]: value\n    });\n  };\n\n  // Add more handlers for nested structures if needed\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: test.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        value: test.description,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(TestForm, \"YCsANGaEW6cUd2ydMBN8lg1R7RY=\", false, function () {\n  return [useForm];\n});\n_c = TestForm;\n;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["React","styles","useForm","jsxDEV","_jsxDEV","TestForm","_s","register","handleSubmit","mode","handleInputChange","e","name","value","target","setTest","test","className","form","children","formGroup","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","description","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testForm/TestForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './TestForm.module.scss';\r\nimport { Answer, IQuestion, Result, Test } from '../../stores/testStore';\r\nimport { useForm, submitHandler } from 'react-hook-form';\r\n\r\n/*name: '',\r\ndescription: '',\r\nauthor: '',\r\nquestions: [],\r\nresults: [],\r\nscore: 0,\r\nlikes: 0,\r\ncomments: [],\r\ncreatedAt: new Date(),\r\nisUpdated: []*/\r\n\r\ntype FormValues = {\r\n    name: string,\r\n    description: string,\r\n    questions: IQuestion[],\r\n    results: Result[]\r\n}\r\n\r\n\r\nexport default function TestForm() {\r\n    const {register, handleSubmit} = useForm<FormValues>({\r\n        mode: 'onBlur'\r\n    });\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setTest({ ...test, [name]: value });\r\n    };\r\n\r\n    // Add more handlers for nested structures if needed\r\n\r\n    return (\r\n        <form className={styles.form}>\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" value={test.name} onChange={handleInputChange} required />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea id=\"description\" name=\"description\" value={test.description} onChange={handleInputChange} required />\r\n            </div>\r\n\r\n\r\n\r\n            <button type=\"submit\">Save Test</button>\r\n        </form>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,SAASC,OAAO,QAAuB,iBAAiB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAmBA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAACC,QAAQ;IAAEC;EAAY,CAAC,GAAGN,OAAO,CAAa;IACjDO,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAA4D,IAAK;IACxF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCC,OAAO,CAAC;MAAE,GAAGC,IAAI;MAAE,CAACJ,IAAI,GAAGC;IAAM,CAAC,CAAC;EACvC,CAAC;;EAED;;EAEA,oBACIT,OAAA;IAAMa,SAAS,EAAEhB,MAAM,CAACiB,IAAK;IAAAC,QAAA,gBACzBf,OAAA;MAAKa,SAAS,EAAEhB,MAAM,CAACmB,SAAU;MAAAD,QAAA,gBAC7Bf,OAAA;QAAOiB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClCrB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACf,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEG,IAAI,CAACJ,IAAK;QAACgB,QAAQ,EAAElB,iBAAkB;QAACmB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAENrB,OAAA;MAAKa,SAAS,EAAEhB,MAAM,CAACmB,SAAU;MAAAD,QAAA,gBAC7Bf,OAAA;QAAOiB,OAAO,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDrB,OAAA;QAAUuB,EAAE,EAAC,aAAa;QAACf,IAAI,EAAC,aAAa;QAACC,KAAK,EAAEG,IAAI,CAACc,WAAY;QAACF,QAAQ,EAAElB,iBAAkB;QAACmB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G,CAAC,eAINrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEf;AAACnB,EAAA,CA7BuBD,QAAQ;EAAA,QACKH,OAAO;AAAA;AAAA6B,EAAA,GADpB1B,QAAQ;AA6B/B;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}