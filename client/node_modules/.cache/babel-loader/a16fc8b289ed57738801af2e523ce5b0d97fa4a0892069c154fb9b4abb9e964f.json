{"ast":null,"code":"import { create } from 'zustand';\nimport { devtools } from \"zustand/middleware\";\nimport { immer } from 'zustand/middleware/immer';\nimport API from './../api/axiosConfig';\nconst useHomeStore = create()(devtools(immer((set, get) => ({\n  tests: null,\n  searchVal: '',\n  isLoading: false,\n  getTests: async () => {\n    await API.get(`/tests`).then(res => {\n      set({\n        tests: res.data.tests\n      });\n    });\n  },\n  searchTests: async () => {\n    await API.post(`/tests/search`, {\n      name: get().searchVal\n    }).then(res => {\n      if (res.data.tests.length) {\n        set({\n          tests: res.data.tests\n        });\n      } else {\n        set({\n          tests: null\n        });\n      }\n    }).catch(err => console.log(err));\n  },\n  handleSearchVal: val => {\n    set({\n      searchVal: val\n    });\n  },\n  setIsLoading: val => {\n    set({\n      isLoading: val\n    });\n  }\n}))));\nexport default useHomeStore;","map":{"version":3,"names":["create","devtools","immer","API","useHomeStore","set","get","tests","searchVal","isLoading","getTests","then","res","data","searchTests","post","name","length","catch","err","console","log","handleSearchVal","val","setIsLoading"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/homeStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { devtools } from \"zustand/middleware\";\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from './../api/axiosConfig';\r\nimport { Test } from './testStore';\r\n\r\n\r\ninterface TestData extends Test {\r\n    authorsName: string,\r\n}\r\n\r\ninterface IStore {\r\n    tests: TestData[] | null,\r\n    searchVal: string,\r\n    isLoading: boolean,\r\n    getTests: () => void,\r\n    searchTests: () => void,\r\n    handleSearchVal: (val: string) => void,\r\n    setIsLoading: (val: boolean) => void,\r\n}\r\n\r\nconst useHomeStore = create<IStore>()(devtools(immer((set, get) => ({\r\n    tests: null,\r\n    searchVal: '',\r\n    isLoading: false,\r\n    getTests: async () => {\r\n        await API.get(`/tests`).then(res => {\r\n            set({ tests: res.data.tests });\r\n        })\r\n    },\r\n    searchTests: async () => {\r\n        await API.post(`/tests/search`, {name: get().searchVal}).then(res => {\r\n            if(res.data.tests.length) {\r\n                set({tests: res.data.tests});\r\n            } else {\r\n                set({tests: null});\r\n            }\r\n        }).catch(err => console.log(err));\r\n    },\r\n    handleSearchVal: (val: string) => {\r\n        set({searchVal: val});\r\n    },\r\n    setIsLoading: (val: boolean) => {\r\n        set({isLoading: val});\r\n    }\r\n}))));\r\n\r\nexport default useHomeStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,GAAG,MAAM,sBAAsB;AAkBtC,MAAMC,YAAY,GAAGJ,MAAM,CAAS,CAAC,CAACC,QAAQ,CAACC,KAAK,CAAC,CAACG,GAAG,EAAEC,GAAG,MAAM;EAChEC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMP,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACK,IAAI,CAACC,GAAG,IAAI;MAChCP,GAAG,CAAC;QAAEE,KAAK,EAAEK,GAAG,CAACC,IAAI,CAACN;MAAM,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;EACDO,WAAW,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMX,GAAG,CAACY,IAAI,CAAC,eAAe,EAAE;MAACC,IAAI,EAAEV,GAAG,CAAC,CAAC,CAACE;IAAS,CAAC,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;MACjE,IAAGA,GAAG,CAACC,IAAI,CAACN,KAAK,CAACU,MAAM,EAAE;QACtBZ,GAAG,CAAC;UAACE,KAAK,EAAEK,GAAG,CAACC,IAAI,CAACN;QAAK,CAAC,CAAC;MAChC,CAAC,MAAM;QACHF,GAAG,CAAC;UAACE,KAAK,EAAE;QAAI,CAAC,CAAC;MACtB;IACJ,CAAC,CAAC,CAACW,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EACDG,eAAe,EAAGC,GAAW,IAAK;IAC9BlB,GAAG,CAAC;MAACG,SAAS,EAAEe;IAAG,CAAC,CAAC;EACzB,CAAC;EACDC,YAAY,EAAGD,GAAY,IAAK;IAC5BlB,GAAG,CAAC;MAACI,SAAS,EAAEc;IAAG,CAAC,CAAC;EACzB;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC;AAEL,eAAenB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}