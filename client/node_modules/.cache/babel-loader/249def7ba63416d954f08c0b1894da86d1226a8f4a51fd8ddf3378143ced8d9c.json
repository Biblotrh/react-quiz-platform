{"ast":null,"code":"import create from 'zustand';\nimport { persist, devtools } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport API from './../api/axiosConfig';\nconst useAuthStore = create()(devtools(immer(persist((set, get) => ({\n  usernameField: '',\n  emailField: '',\n  passwordField: '',\n  checkPasswordField: '',\n  register: async () => {\n    try {\n      console.log('ok');\n      await API.post(`/auth/register`, {\n        email: '@asdasaasdasd',\n        username: 'adssadassdsd',\n        password: 'asdsadsadas'\n      }).then(data => {\n        console.log(data);\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}), {\n  name: 'auth-store'\n}))));\nexport default useAuthStore;","map":{"version":3,"names":["create","persist","devtools","immer","API","useAuthStore","set","get","usernameField","emailField","passwordField","checkPasswordField","register","console","log","post","email","username","password","then","data","err","name"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/authStore.ts"],"sourcesContent":["import create from 'zustand';\r\nimport { persist, devtools } from 'zustand/middleware';\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from './../api/axiosConfig';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ninterface ISTORE {\r\n    usernameField: string,\r\n    emailField: string,\r\n    passwordField: string,\r\n    checkPasswordField: string,\r\n    register: () => void,\r\n}\r\n\r\nconst useAuthStore = create<ISTORE>()(devtools(immer(persist((set, get) => ({\r\n    usernameField: '',\r\n    emailField: '',\r\n    passwordField: '',\r\n    checkPasswordField: '',\r\n    register: async () => {\r\n        try {\r\n            console.log('ok')\r\n            await API.post(`/auth/register`, { email:'@asdasaasdasd', username: 'adssadassdsd', password:'asdsadsadas' }).then((data: AxiosResponse<any>) => {\r\n                console.log(data);\r\n            });\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}),\r\n    {\r\n        name: 'auth-store'\r\n    }\r\n),\r\n),\r\n),\r\n);\r\n\r\nexport default useAuthStore;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,OAAO,EAAEC,QAAQ,QAAQ,oBAAoB;AACtD,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,GAAG,MAAM,sBAAsB;AAWtC,MAAMC,YAAY,GAAGL,MAAM,CAAS,CAAC,CAACE,QAAQ,CAACC,KAAK,CAACF,OAAO,CAAC,CAACK,GAAG,EAAEC,GAAG,MAAM;EACxEC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,EAAE;EACdC,aAAa,EAAE,EAAE;EACjBC,kBAAkB,EAAE,EAAE;EACtBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACjB,MAAMV,GAAG,CAACW,IAAI,CAAC,gBAAgB,EAAE;QAAEC,KAAK,EAAC,eAAe;QAAEC,QAAQ,EAAE,cAAc;QAAEC,QAAQ,EAAC;MAAc,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAwB,IAAK;QAC7IP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;IACpB;EACJ;AACJ,CAAC,CAAC,EACE;EACIC,IAAI,EAAE;AACV,CACJ,CACA,CACA,CACA,CAAC;AAED,eAAejB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}