{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { NavLink, useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const calculateResult = useTestStore(state => state.calculateResult);\n  const params = useParams();\n  const testId = params.id;\n  const result = useTestStore(state => state.result);\n  const {\n    control,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      questions: []\n    },\n    mode: 'all'\n  });\n  const {\n    fields\n  } = useFieldArray({\n    control,\n    name: \"questions\"\n  });\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, [testId, getTest]);\n  useEffect(() => {\n    if (test) {\n      setValue(\"questions\", test.questions.map(q => ({\n        question: q.question,\n        answers: q.answers,\n        selectedAnswer: ''\n      })));\n    }\n  }, [test, setValue]);\n  const onSubmit = data => {\n    console.log(errors);\n    calculateResult(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: test ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testPage,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: test.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [fields.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.answer,\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: `questions.${qIndex}.selectedAnswer`,\n              control: control,\n              rules: {\n                required: true\n              },\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `questions.${qIndex}.selectedAnswer`,\n                value: String(answer.points),\n                checked: String(field.value) === String(answer.points),\n                onChange: () => field.onChange(String(answer.points))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this)]\n          }, aIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)), !result ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(NavLink, {\n          className: styles.navLink,\n          to: `/test/${test._id}/result`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"View results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 148\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testPage,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(TestPage, \"zFbbyyKgT55GvFgYTFD0LnxBSFk=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useParams, useTestStore, useForm, useFieldArray];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","NavLink","useParams","useTestStore","useForm","Controller","useFieldArray","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","calculateResult","params","testId","id","result","control","handleSubmit","setValue","formState","errors","defaultValues","questions","mode","fields","name","map","q","question","answers","selectedAnswer","onSubmit","data","console","log","className","main","children","testPage","fileName","_jsxFileName","lineNumber","columnNumber","description","qIndex","answer","aIndex","rules","required","render","field","type","value","String","points","checked","onChange","navLink","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\nexport type TestPageFormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const calculateResult = useTestStore(state => state.calculateResult)\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const result = useTestStore(state => state.result);\r\n    const { control, handleSubmit, setValue, formState: {errors} } = useForm<TestPageFormValues>({\r\n        defaultValues: {\r\n            questions: []\r\n        },\r\n        mode: 'all',\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n        control,\r\n        name: \"questions\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId);\r\n        }\r\n    }, [testId, getTest]);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            setValue(\"questions\", test.questions.map(q => ({\r\n                question: q.question,\r\n                answers: q.answers,\r\n                selectedAnswer: ''\r\n            })));\r\n        }\r\n    }, [test, setValue]);\r\n\r\n    const onSubmit = (data: TestPageFormValues) => {\r\n        console.log(errors)\r\n        calculateResult(data);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            {test ?\r\n                <div className={styles.testPage} >\r\n                    <h1>{test.name}</h1>\r\n                    <p>{test.description}</p>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {fields.map((question, qIndex) => (\r\n                            <div key={question.id} className={styles.question}>\r\n                                <h3>{question.question}</h3>\r\n                                {question.answers.map((answer, aIndex) => (\r\n                                    <div key={aIndex} className={styles.answer}>\r\n                                        <Controller\r\n                                            name={`questions.${qIndex}.selectedAnswer`}\r\n                                            control={control}\r\n                                            rules={{required: true}}\r\n                                            render={({ field }) => (\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={`questions.${qIndex}.selectedAnswer`}\r\n                                                    value={String(answer.points)}\r\n                                                    checked={String(field.value) === String(answer.points)}\r\n                                                    onChange={() => field.onChange(String(answer.points))}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                        <label>{answer.answer}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n                        \r\n                            {!result ? <button type=\"submit\">Submit</button> : <NavLink className={styles.navLink} to={`/test/${test._id}/result`}><button>View results</button></NavLink>}\r\n                        \r\n                    </form>\r\n                </div>\r\n                : <div className={styles.testPage}><h1>Loading...</h1></div>}\r\n        </div>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,OAAO,EAAEC,SAAS,QAAQ,kBAAkB;AACrD,OAAOC,YAAY,MAAkB,wBAAwB;AAC7D,SAASC,OAAO,EAAEC,UAAU,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYrE,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,YAAY,CAACS,KAAK,IAAIA,KAAK,CAACD,OAAO,CAAC;EACpD,MAAME,IAAI,GAAGV,YAAY,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAC9C,MAAMC,eAAe,GAAGX,YAAY,CAACS,KAAK,IAAIA,KAAK,CAACE,eAAe,CAAC;EACpE,MAAMC,MAAM,GAAGb,SAAS,CAAC,CAAC;EAC1B,MAAMc,MAAM,GAAGD,MAAM,CAACE,EAAE;EACxB,MAAMC,MAAM,GAAGf,YAAY,CAACS,KAAK,IAAIA,KAAK,CAACM,MAAM,CAAC;EAClD,MAAM;IAAEC,OAAO;IAAEC,YAAY;IAAEC,QAAQ;IAAEC,SAAS,EAAE;MAACC;IAAM;EAAE,CAAC,GAAGnB,OAAO,CAAqB;IACzFoB,aAAa,EAAE;MACXC,SAAS,EAAE;IACf,CAAC;IACDC,IAAI,EAAE;EACV,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAO,CAAC,GAAGrB,aAAa,CAAC;IAC7Ba,OAAO;IACPS,IAAI,EAAE;EACV,CAAC,CAAC;EAEF7B,SAAS,CAAC,MAAM;IACZ,IAAIiB,MAAM,EAAE;MACRL,OAAO,CAACK,MAAM,CAAC;IACnB;EACJ,CAAC,EAAE,CAACA,MAAM,EAAEL,OAAO,CAAC,CAAC;EAErBZ,SAAS,CAAC,MAAM;IACZ,IAAIc,IAAI,EAAE;MACNQ,QAAQ,CAAC,WAAW,EAAER,IAAI,CAACY,SAAS,CAACI,GAAG,CAACC,CAAC,KAAK;QAC3CC,QAAQ,EAAED,CAAC,CAACC,QAAQ;QACpBC,OAAO,EAAEF,CAAC,CAACE,OAAO;QAClBC,cAAc,EAAE;MACpB,CAAC,CAAC,CAAC,CAAC;IACR;EACJ,CAAC,EAAE,CAACpB,IAAI,EAAEQ,QAAQ,CAAC,CAAC;EAEpB,MAAMa,QAAQ,GAAIC,IAAwB,IAAK;IAC3CC,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;IACnBT,eAAe,CAACqB,IAAI,CAAC;EACzB,CAAC;EAED,oBACI3B,OAAA;IAAK8B,SAAS,EAAEtC,MAAM,CAACuC,IAAK;IAAAC,QAAA,EACvB3B,IAAI,gBACDL,OAAA;MAAK8B,SAAS,EAAEtC,MAAM,CAACyC,QAAS;MAAAD,QAAA,gBAC5BhC,OAAA;QAAAgC,QAAA,EAAK3B,IAAI,CAACe;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBrC,OAAA;QAAAgC,QAAA,EAAI3B,IAAI,CAACiC;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzBrC,OAAA;QAAM0B,QAAQ,EAAEd,YAAY,CAACc,QAAQ,CAAE;QAAAM,QAAA,GAClCb,MAAM,CAACE,GAAG,CAAC,CAACE,QAAQ,EAAEgB,MAAM,kBACzBvC,OAAA;UAAuB8B,SAAS,EAAEtC,MAAM,CAAC+B,QAAS;UAAAS,QAAA,gBAC9ChC,OAAA;YAAAgC,QAAA,EAAKT,QAAQ,CAACA;UAAQ;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAC3Bd,QAAQ,CAACC,OAAO,CAACH,GAAG,CAAC,CAACmB,MAAM,EAAEC,MAAM,kBACjCzC,OAAA;YAAkB8B,SAAS,EAAEtC,MAAM,CAACgD,MAAO;YAAAR,QAAA,gBACvChC,OAAA,CAACH,UAAU;cACPuB,IAAI,EAAE,aAAamB,MAAM,iBAAkB;cAC3C5B,OAAO,EAAEA,OAAQ;cACjB+B,KAAK,EAAE;gBAACC,QAAQ,EAAE;cAAI,CAAE;cACxBC,MAAM,EAAEA,CAAC;gBAAEC;cAAM,CAAC,kBACd7C,OAAA;gBACI8C,IAAI,EAAC,OAAO;gBACZ1B,IAAI,EAAE,aAAamB,MAAM,iBAAkB;gBAC3CQ,KAAK,EAAEC,MAAM,CAACR,MAAM,CAACS,MAAM,CAAE;gBAC7BC,OAAO,EAAEF,MAAM,CAACH,KAAK,CAACE,KAAK,CAAC,KAAKC,MAAM,CAACR,MAAM,CAACS,MAAM,CAAE;gBACvDE,QAAQ,EAAEA,CAAA,KAAMN,KAAK,CAACM,QAAQ,CAACH,MAAM,CAACR,MAAM,CAACS,MAAM,CAAC;cAAE;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD;YACH;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACFrC,OAAA;cAAAgC,QAAA,EAAQQ,MAAM,CAACA;YAAM;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAfxBI,MAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBX,CACR,CAAC;QAAA,GApBId,QAAQ,CAACd,EAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBhB,CACR,CAAC,EAGG,CAAC3B,MAAM,gBAAGV,OAAA;UAAQ8C,IAAI,EAAC,QAAQ;UAAAd,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAAGrC,OAAA,CAACP,OAAO;UAACqC,SAAS,EAAEtC,MAAM,CAAC4D,OAAQ;UAACC,EAAE,EAAE,SAAShD,IAAI,CAACiD,GAAG,SAAU;UAAAtB,QAAA,eAAChC,OAAA;YAAAgC,QAAA,EAAQ;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,gBACJrC,OAAA;MAAK8B,SAAS,EAAEtC,MAAM,CAACyC,QAAS;MAAAD,QAAA,eAAChC,OAAA;QAAAgC,QAAA,EAAI;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd;AAACnC,EAAA,CAjFuBD,QAAQ;EAAA,QACZN,YAAY,EACfA,YAAY,EACDA,YAAY,EACrBD,SAAS,EAETC,YAAY,EACsCC,OAAO,EAOrDE,aAAa;AAAA;AAAAyD,EAAA,GAdZtD,QAAQ;AAiF/B;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}