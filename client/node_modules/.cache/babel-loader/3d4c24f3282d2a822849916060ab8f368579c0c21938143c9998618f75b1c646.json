{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\components\\\\tests\\\\Tests.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Tests.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport useAuthStore from '../../stores/authStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tests({\n  tests\n}) {\n  _s();\n  const username = useAuthStore(state => {\n    var _state$user;\n    return (_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.username;\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.testList,\n    children: tests.map(test => /*#__PURE__*/_jsxDEV(NavLink, {\n      className: styles.navLink,\n      to: `/test/${test._id}`,\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.testItem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.titleDateDiv,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.testTitle,\n            children: test.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.testDate,\n            children: test.createdAt.split('T')[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.testAuthor,\n          children: test.authorsName ? test.authorsName : username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.testDescription,\n          children: test.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, test._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Tests, \"Fs0aw/IiuKkYxkDoAxBYaMGdo+g=\", false, function () {\n  return [useAuthStore];\n});\n_c = Tests;\nvar _c;\n$RefreshReg$(_c, \"Tests\");","map":{"version":3,"names":["React","styles","NavLink","useAuthStore","jsxDEV","_jsxDEV","Tests","tests","_s","username","state","_state$user","user","className","testList","children","map","test","navLink","to","_id","testItem","titleDateDiv","testTitle","name","fileName","_jsxFileName","lineNumber","columnNumber","testDate","createdAt","split","testAuthor","authorsName","testDescription","description","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/components/tests/Tests.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Tests.module.scss';\r\nimport { TestData } from '../../stores/homeStore';\r\nimport { NavLink } from 'react-router-dom';\r\nimport useAuthStore from '../../stores/authStore';\r\nimport { Test } from '../../stores/testStore';\r\n\r\ninterface IProps {\r\n    tests: TestData[] | Test[]\r\n}\r\n\r\nexport default function Tests({tests}: IProps) {\r\n    const username = useAuthStore(state => state.user?.username);\r\n    return (\r\n        <ul className={styles.testList}>\r\n        {tests.map(test => (\r\n            <NavLink key={test._id} className={styles.navLink} to={`/test/${test._id}`}>\r\n                <li className={styles.testItem}>\r\n                    <div className={styles.titleDateDiv}>\r\n                        <h2 className={styles.testTitle}>{test.name}</h2>\r\n                        <p className={styles.testDate}>{test.createdAt.split('T')[0]}</p>\r\n                    </div>\r\n                        <p className={styles.testAuthor}>{test.authorsName ? test.authorsName : username}</p>\r\n                    <p className={styles.testDescription}>{test.description}</p>\r\n                </li>\r\n            </NavLink>\r\n        ))}\r\n    </ul>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,YAAY,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,eAAe,SAASC,KAAKA,CAAC;EAACC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGN,YAAY,CAACO,KAAK;IAAA,IAAAC,WAAA;IAAA,QAAAA,WAAA,GAAID,KAAK,CAACE,IAAI,cAAAD,WAAA,uBAAVA,WAAA,CAAYF,QAAQ;EAAA,EAAC;EAC5D,oBACIJ,OAAA;IAAIQ,SAAS,EAAEZ,MAAM,CAACa,QAAS;IAAAC,QAAA,EAC9BR,KAAK,CAACS,GAAG,CAACC,IAAI,iBACXZ,OAAA,CAACH,OAAO;MAAgBW,SAAS,EAAEZ,MAAM,CAACiB,OAAQ;MAACC,EAAE,EAAE,SAASF,IAAI,CAACG,GAAG,EAAG;MAAAL,QAAA,eACvEV,OAAA;QAAIQ,SAAS,EAAEZ,MAAM,CAACoB,QAAS;QAAAN,QAAA,gBAC3BV,OAAA;UAAKQ,SAAS,EAAEZ,MAAM,CAACqB,YAAa;UAAAP,QAAA,gBAChCV,OAAA;YAAIQ,SAAS,EAAEZ,MAAM,CAACsB,SAAU;YAAAR,QAAA,EAAEE,IAAI,CAACO;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjDvB,OAAA;YAAGQ,SAAS,EAAEZ,MAAM,CAAC4B,QAAS;YAAAd,QAAA,EAAEE,IAAI,CAACa,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACFvB,OAAA;UAAGQ,SAAS,EAAEZ,MAAM,CAAC+B,UAAW;UAAAjB,QAAA,EAAEE,IAAI,CAACgB,WAAW,GAAGhB,IAAI,CAACgB,WAAW,GAAGxB;QAAQ;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzFvB,OAAA;UAAGQ,SAAS,EAAEZ,MAAM,CAACiC,eAAgB;UAAAnB,QAAA,EAAEE,IAAI,CAACkB;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC,GARKX,IAAI,CAACG,GAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET;AAACpB,EAAA,CAlBuBF,KAAK;EAAA,QACRH,YAAY;AAAA;AAAAiC,EAAA,GADT9B,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}