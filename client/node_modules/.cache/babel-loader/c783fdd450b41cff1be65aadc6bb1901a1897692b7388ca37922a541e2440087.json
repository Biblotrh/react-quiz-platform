{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testReview\\\\TestReview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport styles from './TestReview.module.scss';\nimport { useParams } from \"react-router-dom\";\nimport useTestStore from \"../../stores/testStore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TestReview() {\n  _s();\n  const params = useParams();\n  const testId = params.id;\n  const test = useTestStore(state => state.test);\n  const getTest = useTestStore(state => state.getTest);\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: test ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: test.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.questions,\n        children: test.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: question.answers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: answer.answer\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.results,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }, this)\n  }, void 0, false);\n}\n_s(TestReview, \"2VoGooFKSa6Fc0VSCBKACKrKDhA=\", false, function () {\n  return [useParams, useTestStore, useTestStore];\n});\n_c = TestReview;\nvar _c;\n$RefreshReg$(_c, \"TestReview\");","map":{"version":3,"names":["React","useEffect","styles","useParams","useTestStore","jsxDEV","_jsxDEV","Fragment","_Fragment","TestReview","_s","params","testId","id","test","state","getTest","children","className","testContainer","name","fileName","_jsxFileName","lineNumber","columnNumber","description","questions","map","question","index","answers","answer","idx","results","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testReview/TestReview.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styles from './TestReview.module.scss';\r\nimport { useParams } from \"react-router-dom\";\r\nimport useTestStore from \"../../stores/testStore\";\r\n\r\nexport default function TestReview() {\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const test = useTestStore(state => state.test);\r\n    const getTest = useTestStore(state => state.getTest);\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId);\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            {test ? <div className={styles.testContainer}>\r\n                <h1>{test.name}</h1>\r\n                <p>{test.description}</p>\r\n                <div className={styles.questions}>\r\n                    {test.questions.map((question, index) => (\r\n                        <div key={index} className={styles.question}>\r\n                            <p>{question.question}</p>\r\n                            <ul>\r\n                                {question.answers.map((answer, idx) => (\r\n                                    <li key={idx}>{answer.answer}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className={styles.results}>\r\n                    <h2>Results</h2>\r\n                    {/*test.results.map((result, index) => (\r\n                        <div key={index} className={styles.result}>\r\n                            <p>Score: {result.score}</p>\r\n                            <p>Likes: {result.likes}</p>\r\n                        </div>\r\n                    ))*/}\r\n                </div>\r\n            </div> : <h1>Loading...</h1>}\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}