{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\components\\\\comments\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './Comments.module.scss';\nimport useTestStore from '../../stores/testStore';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n  var _errors$comment;\n  const getComments = useTestStore(state => state.getComments);\n  const getAnswers = useTestStore(state => state.getAnswers);\n  const createComment = useTestStore(state => state.createComment);\n  const createAnswer = useTestStore(state => state.createAnswer);\n  const comments = useTestStore(state => state.comments);\n  const testId = useTestStore(state => {\n    var _state$test;\n    return (_state$test = state.test) === null || _state$test === void 0 ? void 0 : _state$test._id;\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm();\n  const isAnswering = useTestStore(state => state.isAnswering);\n  const setIsAnswering = useTestStore(state => state.setIsAnswering);\n  useEffect(() => {\n    if (testId) {\n      getComments();\n    }\n  }, [getComments, testId]);\n  const onSubmit = data => {\n    if (!isAnswering) {\n      createComment(data.comment);\n      reset({\n        comment: ''\n      });\n    } else {\n      createAnswer(data.answer);\n      reset({\n        answer: ''\n      });\n    }\n  };\n  function handleAnswer(commentId) {\n    if (isAnswering !== commentId) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.answerLink,\n        onClick: () => setIsAnswering(commentId),\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formSection,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Your answer\",\n            ...register('answer', {\n              required: 'This field is required'\n            }),\n            className: styles.textarea\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            type: \"submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAnswering(''),\n            type: \"button\",\n            className: styles.cancelButton,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.commentsSection,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.commentsList,\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.comment,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2014 \", comment.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), handleAnswer(comment._id), comment.answers.length && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.answerLink,\n          children: \"Show answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 48\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Your comment\",\n          ...register('comment', {\n            required: 'This field is required'\n          }),\n          className: styles.textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: ((_errors$comment = errors.comment) === null || _errors$comment === void 0 ? void 0 : _errors$comment.message) && errors.comment.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.button,\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"yVDBaeS15KtwAp1kR7U1UgEZfVw=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useTestStore, useTestStore, useTestStore, useForm, useTestStore, useTestStore];\n});\n_c = Comments;\n;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","styles","useTestStore","useForm","jsxDEV","_jsxDEV","Comments","_s","_errors$comment","getComments","state","getAnswers","createComment","createAnswer","comments","testId","_state$test","test","_id","register","handleSubmit","formState","errors","reset","isAnswering","setIsAnswering","onSubmit","data","comment","answer","handleAnswer","commentId","className","answerLink","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","formSection","placeholder","required","textarea","button","type","cancelButton","commentsSection","commentsList","map","author","username","answers","length","error","message","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/components/comments/Comments.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './Comments.module.scss';\r\nimport useTestStore from '../../stores/testStore';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\ntype CommentFormValues = {\r\n    comment: string,\r\n    answer: string\r\n}\r\n\r\nexport default function Comments() {\r\n    const getComments = useTestStore(state => state.getComments);\r\n    const getAnswers = useTestStore(state => state.getAnswers);\r\n    const createComment = useTestStore(state => state.createComment);\r\n    const createAnswer = useTestStore(state => state.createAnswer);\r\n    const comments = useTestStore(state => state.comments);\r\n    const testId = useTestStore(state => state.test?._id);\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm<CommentFormValues>();\r\n    const isAnswering = useTestStore(state => state.isAnswering);\r\n    const setIsAnswering = useTestStore(state => state.setIsAnswering);\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getComments();\r\n        }\r\n    }, [getComments, testId]);\r\n\r\n    const onSubmit: SubmitHandler<CommentFormValues> = (data) => {\r\n        if (!isAnswering) {\r\n            createComment(data.comment);\r\n            reset({ comment: '' });\r\n        } else {\r\n            createAnswer(data.answer);\r\n            reset({answer: ''});\r\n        }\r\n\r\n    }\r\n\r\n    function handleAnswer(commentId: string) {\r\n        if (isAnswering !== commentId) {\r\n            return <p className={styles.answerLink} onClick={() => setIsAnswering(commentId)}>Answer</p>\r\n        } else {\r\n            return (\r\n                <div className={styles.formSection}>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <textarea\r\n                            placeholder=\"Your answer\"\r\n                            {...register('answer', { required: 'This field is required' })}\r\n                            className={styles.textarea}\r\n                        />\r\n                        <button className={styles.button} type='submit'>\r\n                            Add Comment\r\n                        </button>\r\n                        <button onClick={() => setIsAnswering('')} type='button' className={styles.cancelButton}>\r\n                            Cancel\r\n                        </button>\r\n                    </form>\r\n                </div>);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.commentsSection}>\r\n            <h2>Comments</h2>\r\n            <ul className={styles.commentsList}>\r\n                {comments && comments.map((comment) => (\r\n                    <li key={comment._id} className={styles.comment}>\r\n                        <p>{comment.comment}</p>\r\n                        <span>— {comment.author.username}</span>\r\n                    {handleAnswer(comment._id)}\r\n                    {comment.answers.length && <p className={styles.answerLink}>Show answers</p>}\r\n                    </li>\r\n                    \r\n                ))}\r\n            </ul>\r\n            <div className={styles.formSection}>\r\n                <h3>Add a Comment</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <textarea\r\n                        placeholder=\"Your comment\"\r\n                        {...register('comment', { required: 'This field is required' })}\r\n                        className={styles.textarea}\r\n                    />\r\n                    <p className={styles.error}>{errors.comment?.message && errors.comment.message}</p>\r\n                    <button  className={styles.button} type='submit'>\r\n                        Add Comment\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}