{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { NavLink, useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const calculateResult = useTestStore(state => state.calculateResult);\n  const params = useParams();\n  const testId = params.id;\n  const {\n    control,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues: {\n      questions: []\n    }\n  });\n  const {\n    fields\n  } = useFieldArray({\n    control,\n    name: \"questions\"\n  });\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, [testId, getTest]);\n  useEffect(() => {\n    if (test) {\n      setValue(\"questions\", test.questions.map(q => ({\n        question: q.question,\n        answers: q.answers,\n        selectedAnswer: ''\n      })));\n    }\n  }, [test, setValue]);\n  const onSubmit = data => {\n    calculateResult(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: test ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testPage,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: test.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [fields.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.answer,\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: `questions.${qIndex}.selectedAnswer`,\n              control: control,\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${qIndex}`,\n                value: answer.points,\n                checked: field.value === String(answer.points),\n                onChange: () => field.onChange(String(answer.points))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this)]\n          }, aIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: styles.navLink,\n            to: `/test/${test._id}/result`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testPage,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(TestPage, \"dFZ4V3uj2JlY15iPxZmWqOWxrok=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useParams, useForm, useFieldArray];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","NavLink","useParams","useTestStore","useForm","Controller","useFieldArray","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","calculateResult","params","testId","id","control","handleSubmit","setValue","defaultValues","questions","fields","name","map","q","question","answers","selectedAnswer","onSubmit","data","className","main","children","testPage","fileName","_jsxFileName","lineNumber","columnNumber","description","qIndex","answer","aIndex","render","field","type","value","points","checked","String","onChange","navLink","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller, useFieldArray } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\nexport type TestPageFormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const calculateResult = useTestStore(state => state.calculateResult)\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const { control, handleSubmit, setValue } = useForm<TestPageFormValues>({\r\n        defaultValues: {\r\n            questions: []\r\n        }\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n        control,\r\n        name: \"questions\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId);\r\n        }\r\n    }, [testId, getTest]);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            setValue(\"questions\", test.questions.map(q => ({\r\n                question: q.question,\r\n                answers: q.answers,\r\n                selectedAnswer: ''\r\n            })));\r\n        }\r\n    }, [test, setValue]);\r\n\r\n    const onSubmit = (data: TestPageFormValues) => {\r\n        calculateResult(data);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            {test ?\r\n                <div className={styles.testPage} >\r\n                    <h1>{test.name}</h1>\r\n                    <p>{test.description}</p>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {fields.map((question, qIndex) => (\r\n                            <div key={question.id} className={styles.question}>\r\n                                <h3>{question.question}</h3>\r\n                                {question.answers.map((answer, aIndex) => (\r\n                                    <div key={aIndex} className={styles.answer}>\r\n                                        <Controller\r\n                                            name={`questions.${qIndex}.selectedAnswer`}\r\n                                            control={control}\r\n                                            render={({ field }) => (\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={`question-${qIndex}`}\r\n                                                    value={answer.points}\r\n                                                    checked={field.value === String(answer.points)}\r\n                                                    onChange={() => field.onChange(String(answer.points))}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                        <label>{answer.answer}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n                        <button type=\"submit\">\r\n                            <NavLink className={styles.navLink} to={`/test/${test._id}/result`}>Submit</NavLink>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n                : <div className={styles.testPage}><h1>Loading...</h1></div>}\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}