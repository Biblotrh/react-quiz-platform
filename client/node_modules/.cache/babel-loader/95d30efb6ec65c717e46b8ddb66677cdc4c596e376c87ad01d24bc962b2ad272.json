{"ast":null,"code":"import { create } from 'zustand';\nimport { devtools } from \"zustand/middleware\";\nimport { immer } from 'zustand/middleware/immer';\nimport API from './../api/axiosConfig';\nconst useHomeStore = create()(devtools(immer((set, get) => ({\n  testIcons: null,\n  getIcons: async () => {\n    await API.get(`/tests`).then(res => {\n      set({\n        testIcons: res.data.tests\n      });\n      console.log(res.data.tests);\n    });\n  }\n}))));\nexport default useHomeStore;","map":{"version":3,"names":["create","devtools","immer","API","useHomeStore","set","get","testIcons","getIcons","then","res","data","tests","console","log"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/homeStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { devtools } from \"zustand/middleware\";\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from './../api/axiosConfig';\r\n\r\ntype TestIcon = {\r\n    name: string,\r\n    description: string,\r\n    id: string,\r\n    author: string,\r\n    createdAt: string\r\n}\r\n\r\ninterface IStore {\r\n    testIcons: TestIcon[] | null,\r\n    getIcons: () => void\r\n}\r\n\r\nconst useHomeStore = create<IStore>()(devtools(immer((set, get) => ({\r\n    testIcons: null,\r\n    getIcons: async () => {\r\n        await API.get(`/tests`).then(res => {\r\n            set({ testIcons: res.data.tests });\r\n            console.log(res.data.tests)\r\n        })\r\n    }\r\n}))));\r\n\r\nexport default useHomeStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,GAAG,MAAM,sBAAsB;AAetC,MAAMC,YAAY,GAAGJ,MAAM,CAAS,CAAC,CAACC,QAAQ,CAACC,KAAK,CAAC,CAACG,GAAG,EAAEC,GAAG,MAAM;EAChEC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAML,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACG,IAAI,CAACC,GAAG,IAAI;MAChCL,GAAG,CAAC;QAAEE,SAAS,EAAEG,GAAG,CAACC,IAAI,CAACC;MAAM,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC;IAC/B,CAAC,CAAC;EACN;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC;AAEL,eAAeR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}