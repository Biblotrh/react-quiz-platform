{"ast":null,"code":"import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport API from '../api/axiosConfig';\nconst useUserStore = create()(devtools(immer((set, get) => ({\n  errText: '',\n  isLogged: false,\n  isRegistered: false,\n  user: null,\n  tests: [],\n  isLoading: false,\n  register: async (email, username, password) => {\n    await API.post(`/auth/register`, {\n      email,\n      username,\n      password\n    }).then(res => {\n      if (res.data.message === 'Success') {\n        set({\n          isRegistered: true\n        });\n      }\n    });\n  },\n  login: async (email, password) => {\n    await API.post(`/auth/login`, {\n      email,\n      password\n    }).then(res => {\n      if (res.data.accessToken) {\n        document.cookie = `token=${res.data.accessToken};`;\n        set({\n          isLogged: true,\n          user: res.data.user\n        });\n      } else {\n        set({\n          errText: 'Invalid email or password'\n        });\n        set({\n          isLogged: false\n        });\n      }\n    });\n  },\n  logout: async () => {\n    await API.post(`/auth/logout`).then(res => {\n      console.log(res);\n      if (res.data.message === 'Success') {\n        document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:00 UTC;';\n        set({\n          isLogged: false\n        });\n      } else {\n        console.log('something went wrong');\n      }\n    });\n  },\n  refresh: async () => {\n    await API.get(`/auth/refresh`).then(res => {\n      if (res.data.accessToken) {\n        document.cookie = `token=${res.data.accessToken};`;\n        set({\n          isLogged: true,\n          user: res.data.user\n        });\n      } else {\n        set({\n          isLogged: false\n        });\n      }\n    }).catch(err => console.log(err));\n  },\n  getUser: async () => {\n    await API.get(`/user`).then(res => {\n      if (res.data.user) {\n        set({\n          user: res.data.user\n        });\n      }\n    }).catch(err => console.log(err));\n  },\n  getUserTests: async userId => {\n    set({\n      isLoading: true\n    });\n    await API.get(`/tests/${userId}`).then(res => {\n      set({\n        tests: res.data.tests\n      });\n      set({\n        isLoading: false\n      });\n    });\n  },\n  setError: err => {\n    set({\n      errText: err\n    });\n  },\n  handleIsLogged: val => {\n    set({\n      isLogged: val\n    });\n  },\n  handleIsRegistered: val => {\n    set({\n      isRegistered: val\n    });\n  },\n  like: async testId => {\n    var _get$user, _get$user2;\n    console.log((_get$user = get().user) === null || _get$user === void 0 ? void 0 : _get$user._id);\n    await API.post(`/likeTest`, {\n      testId,\n      userId: (_get$user2 = get().user) === null || _get$user2 === void 0 ? void 0 : _get$user2._id\n    }).catch(err => console.log(err));\n  }\n}))));\nexport default useUserStore;","map":{"version":3,"names":["create","devtools","immer","API","useUserStore","set","get","errText","isLogged","isRegistered","user","tests","isLoading","register","email","username","password","post","then","res","data","message","login","accessToken","document","cookie","logout","console","log","refresh","catch","err","getUser","getUserTests","userId","setError","handleIsLogged","val","handleIsRegistered","like","testId","_get$user","_get$user2","_id"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/userStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { devtools } from 'zustand/middleware';\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from '../api/axiosConfig';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Test } from './testStore';\r\n\r\ninterface IStore {\r\n    errText: string,\r\n    isLogged: boolean,\r\n    isRegistered: boolean,\r\n    user: IUser | null,\r\n    tests: Test[],\r\n    isLoading: boolean,\r\n    register: (email: string, username: string, password: string) => void,\r\n    login: (email: string, password: string) => void,\r\n    setError: (err: string) => void,\r\n    logout: () => void,\r\n    refresh: () => void,\r\n    getUser: () => void,\r\n    getUserTests: (userId: string) => void,\r\n    handleIsLogged: (val: boolean) => void,\r\n    handleIsRegistered: (val: boolean) => void,\r\n    like: (testId: string) => void\r\n}\r\n\r\ninterface IUser {\r\n    _id: string,\r\n    username: string,\r\n    email: string,\r\n    isActivated: boolean,\r\n    likedPosts: [],\r\n    likedComments: [],\r\n    createdTests: [],\r\n    posts: [],\r\n    __v: number,\r\n}\r\n\r\nconst useUserStore = create<IStore>()(devtools(immer((set, get) => ({\r\n    errText: '',\r\n    isLogged: false,\r\n    isRegistered: false,\r\n    user: null,\r\n    tests: [],\r\n    isLoading: false,\r\n    register: async (email: string, username: string, password: string) => {\r\n        await API.post(`/auth/register`, { email, username, password }).then(res => {\r\n            if (res.data.message === 'Success') {\r\n                set({ isRegistered: true });\r\n            }\r\n        });\r\n    },\r\n    login: async (email: string, password: string) => {\r\n        await API.post(`/auth/login`, { email, password }).then((res: AxiosResponse<any>) => {\r\n            if (res.data.accessToken) {\r\n                document.cookie = `token=${res.data.accessToken};`;\r\n                set({ isLogged: true, user: res.data.user });\r\n            } else {\r\n                set({ errText: 'Invalid email or password' });\r\n                set({ isLogged: false });\r\n            }\r\n\r\n        });\r\n    },\r\n    logout: async () => {\r\n        await API.post(`/auth/logout`).then(res => {\r\n            console.log(res)\r\n            if (res.data.message === 'Success') {\r\n                document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:00 UTC;'\r\n                set({ isLogged: false });\r\n            } else {\r\n                console.log('something went wrong')\r\n            }\r\n        });\r\n    },\r\n    refresh: async () => {\r\n        await API.get(`/auth/refresh`).then(res => {\r\n            if (res.data.accessToken) {\r\n                document.cookie = `token=${res.data.accessToken};`;\r\n                set({ isLogged: true, user: res.data.user });\r\n            } else {\r\n                set({ isLogged: false });\r\n            }\r\n        }).catch(err => console.log(err))\r\n    },\r\n    getUser: async () => {\r\n        await API.get(`/user`).then(res => {\r\n            if (res.data.user) {\r\n                set({ user: res.data.user });\r\n            }\r\n        }).catch(err => console.log(err));\r\n    },\r\n    getUserTests: async (userId: string) => {\r\n        set({ isLoading: true });\r\n        await API.get(`/tests/${userId}`).then(res => {\r\n            set({ tests: res.data.tests });\r\n            set({ isLoading: false });\r\n        })\r\n    },\r\n    setError: (err: string) => {\r\n        set({ errText: err });\r\n    },\r\n    handleIsLogged: (val: boolean) => {\r\n        set({ isLogged: val });\r\n    },\r\n    handleIsRegistered: (val: boolean) => {\r\n        set({ isRegistered: val });\r\n    },\r\n    like: async (testId: string) => {\r\n        console.log(get().user?._id)\r\n        await API.post(`/likeTest`, { testId, userId: get().user?._id }).catch(err => console.log(err));\r\n    }\r\n})\r\n),\r\n),\r\n);\r\n\r\nexport default useUserStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,GAAG,MAAM,oBAAoB;AAmCpC,MAAMC,YAAY,GAAGJ,MAAM,CAAS,CAAC,CAACC,QAAQ,CAACC,KAAK,CAAC,CAACG,GAAG,EAAEC,GAAG,MAAM;EAChEC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,KAAK;EACfC,YAAY,EAAE,KAAK;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,EAAEC,QAAgB,KAAK;IACnE,MAAMb,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAE;MAAEH,KAAK;MAAEC,QAAQ;MAAEC;IAAS,CAAC,CAAC,CAACE,IAAI,CAACC,GAAG,IAAI;MACxE,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,KAAK,SAAS,EAAE;QAChChB,GAAG,CAAC;UAAEI,YAAY,EAAE;QAAK,CAAC,CAAC;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC;EACDa,KAAK,EAAE,MAAAA,CAAOR,KAAa,EAAEE,QAAgB,KAAK;IAC9C,MAAMb,GAAG,CAACc,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEE;IAAS,CAAC,CAAC,CAACE,IAAI,CAAEC,GAAuB,IAAK;MACjF,IAAIA,GAAG,CAACC,IAAI,CAACG,WAAW,EAAE;QACtBC,QAAQ,CAACC,MAAM,GAAG,SAASN,GAAG,CAACC,IAAI,CAACG,WAAW,GAAG;QAClDlB,GAAG,CAAC;UAAEG,QAAQ,EAAE,IAAI;UAAEE,IAAI,EAAES,GAAG,CAACC,IAAI,CAACV;QAAK,CAAC,CAAC;MAChD,CAAC,MAAM;QACHL,GAAG,CAAC;UAAEE,OAAO,EAAE;QAA4B,CAAC,CAAC;QAC7CF,GAAG,CAAC;UAAEG,QAAQ,EAAE;QAAM,CAAC,CAAC;MAC5B;IAEJ,CAAC,CAAC;EACN,CAAC;EACDkB,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,MAAMvB,GAAG,CAACc,IAAI,CAAC,cAAc,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MACvCQ,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;MAChB,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,KAAK,SAAS,EAAE;QAChCG,QAAQ,CAACC,MAAM,GAAG,mDAAmD;QACrEpB,GAAG,CAAC;UAAEG,QAAQ,EAAE;QAAM,CAAC,CAAC;MAC5B,CAAC,MAAM;QACHmB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC;IACJ,CAAC,CAAC;EACN,CAAC;EACDC,OAAO,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAM1B,GAAG,CAACG,GAAG,CAAC,eAAe,CAAC,CAACY,IAAI,CAACC,GAAG,IAAI;MACvC,IAAIA,GAAG,CAACC,IAAI,CAACG,WAAW,EAAE;QACtBC,QAAQ,CAACC,MAAM,GAAG,SAASN,GAAG,CAACC,IAAI,CAACG,WAAW,GAAG;QAClDlB,GAAG,CAAC;UAAEG,QAAQ,EAAE,IAAI;UAAEE,IAAI,EAAES,GAAG,CAACC,IAAI,CAACV;QAAK,CAAC,CAAC;MAChD,CAAC,MAAM;QACHL,GAAG,CAAC;UAAEG,QAAQ,EAAE;QAAM,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,CAACsB,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACrC,CAAC;EACDC,OAAO,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAM7B,GAAG,CAACG,GAAG,CAAC,OAAO,CAAC,CAACY,IAAI,CAACC,GAAG,IAAI;MAC/B,IAAIA,GAAG,CAACC,IAAI,CAACV,IAAI,EAAE;QACfL,GAAG,CAAC;UAAEK,IAAI,EAAES,GAAG,CAACC,IAAI,CAACV;QAAK,CAAC,CAAC;MAChC;IACJ,CAAC,CAAC,CAACoB,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACrC,CAAC;EACDE,YAAY,EAAE,MAAOC,MAAc,IAAK;IACpC7B,GAAG,CAAC;MAAEO,SAAS,EAAE;IAAK,CAAC,CAAC;IACxB,MAAMT,GAAG,CAACG,GAAG,CAAC,UAAU4B,MAAM,EAAE,CAAC,CAAChB,IAAI,CAACC,GAAG,IAAI;MAC1Cd,GAAG,CAAC;QAAEM,KAAK,EAAEQ,GAAG,CAACC,IAAI,CAACT;MAAM,CAAC,CAAC;MAC9BN,GAAG,CAAC;QAAEO,SAAS,EAAE;MAAM,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC;EACDuB,QAAQ,EAAGJ,GAAW,IAAK;IACvB1B,GAAG,CAAC;MAAEE,OAAO,EAAEwB;IAAI,CAAC,CAAC;EACzB,CAAC;EACDK,cAAc,EAAGC,GAAY,IAAK;IAC9BhC,GAAG,CAAC;MAAEG,QAAQ,EAAE6B;IAAI,CAAC,CAAC;EAC1B,CAAC;EACDC,kBAAkB,EAAGD,GAAY,IAAK;IAClChC,GAAG,CAAC;MAAEI,YAAY,EAAE4B;IAAI,CAAC,CAAC;EAC9B,CAAC;EACDE,IAAI,EAAE,MAAOC,MAAc,IAAK;IAAA,IAAAC,SAAA,EAAAC,UAAA;IAC5Bf,OAAO,CAACC,GAAG,EAAAa,SAAA,GAACnC,GAAG,CAAC,CAAC,CAACI,IAAI,cAAA+B,SAAA,uBAAVA,SAAA,CAAYE,GAAG,CAAC;IAC5B,MAAMxC,GAAG,CAACc,IAAI,CAAC,WAAW,EAAE;MAAEuB,MAAM;MAAEN,MAAM,GAAAQ,UAAA,GAAEpC,GAAG,CAAC,CAAC,CAACI,IAAI,cAAAgC,UAAA,uBAAVA,UAAA,CAAYC;IAAI,CAAC,CAAC,CAACb,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC,CAAC;EACnG;AACJ,CAAC,CACD,CACA,CACA,CAAC;AAED,eAAe3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}