{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { NavLink, useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const calculateResult = useTestStore(state => state.calculateResult);\n  const params = useParams();\n  const testId = params.id;\n  const {\n    control,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues: {\n      questions: test ? test.questions.map(question => ({\n        question: question.question,\n        answers: question.answers,\n        selectedAnswer: ''\n      })) : []\n    }\n  });\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, [testId, getTest]);\n  useEffect(() => {\n    if (test) {\n      setValue(\"questions\", test.questions.map(q => ({\n        question: q.question,\n        answers: q.answers,\n        selectedAnswer: ''\n      })));\n    }\n  }, [test, setValue]);\n  const onSubmit = data => {\n    calculateResult(data);\n  };\n  return test ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.testPage,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: test.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: test.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [test.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.question,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.answer,\n            children: [/*#__PURE__*/_jsxDEV(Controller, {\n              name: `questions.${qIndex}.selectedAnswer`,\n              control: control,\n              render: ({\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `question-${qIndex}`,\n                value: answer.points,\n                checked: field.value === String(answer.points),\n                onChange: () => field.onChange(answer.points)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: answer.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)]\n          }, aIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this))]\n        }, qIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: styles.navLink,\n            to: `/test/${test._id}/result`,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 15\n  }, this);\n}\n_s(TestPage, \"vAQEApKu4F1hilMycok7fAcqfHU=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useParams, useForm];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","NavLink","useParams","useTestStore","useForm","Controller","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","calculateResult","params","testId","id","control","handleSubmit","setValue","defaultValues","questions","map","question","answers","selectedAnswer","q","onSubmit","data","children","className","testPage","name","fileName","_jsxFileName","lineNumber","columnNumber","description","qIndex","answer","aIndex","render","field","type","value","points","checked","String","onChange","navLink","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\nexport type TestPageFormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const calculateResult = useTestStore(state => state.calculateResult)\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const { control, handleSubmit, setValue } = useForm<TestPageFormValues>({\r\n        defaultValues: {\r\n            questions: test ? test.questions.map(question => ({\r\n                question: question.question,\r\n                answers: question.answers,\r\n                selectedAnswer: ''\r\n            })) : []\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId)\r\n        }\r\n    }, [testId, getTest]);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            setValue(\"questions\", test.questions.map(q => ({\r\n                question: q.question,\r\n                answers: q.answers,\r\n                selectedAnswer: ''\r\n            })));\r\n        }\r\n    }, [test, setValue]);\r\n\r\n    const onSubmit = (data: TestPageFormValues) => {\r\n        calculateResult(data);\r\n    }\r\n\r\n    return (\r\n        test ?\r\n            <div>\r\n                <div className={styles.testPage} >\r\n                    <h1>{test.name}</h1>\r\n                    <p>{test.description}</p>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {test.questions.map((question, qIndex) => (\r\n                            <div key={qIndex} className={styles.question}>\r\n                                <h3>{question.question}</h3>\r\n                                {question.answers.map((answer, aIndex) => (\r\n                                    <div key={aIndex} className={styles.answer}>\r\n                                        <Controller name={`questions.${qIndex}.selectedAnswer`}\r\n                                            control={control}\r\n                                            render={({ field }) => (\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={`question-${qIndex}`}\r\n                                                    value={answer.points}\r\n                                                    checked={field.value === String(answer.points)}\r\n                                                    onChange={() => field.onChange(answer.points)}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                        <label>{answer.answer}</label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ))}\r\n\r\n                        <button type=\"submit\"><NavLink className={styles.navLink} to={`/test/${test._id}/result`}>Submit</NavLink></button>\r\n                    </form>\r\n                </div >\r\n            </div>\r\n            : <div className={styles.testPage}><h1>Loading...</h1></div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}