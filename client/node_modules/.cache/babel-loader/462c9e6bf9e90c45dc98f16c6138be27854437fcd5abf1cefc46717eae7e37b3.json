{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Login.module.scss';\nimport useAuthStore from '../../stores/authStore';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const login = useAuthStore(state => state.login);\n  const setError = useAuthStore(state => state.setError);\n  const err = useAuthStore(state => state.errText);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => {\n    var _errors$email, _errors$password;\n    if (data.email.split('@')[1].length < 5 || !data.email.split('@')[1].includes('.')) {\n      setError('Entered invalid password or email');\n    } else if ((_errors$email = errors.email) !== null && _errors$email !== void 0 && _errors$email.message || (_errors$password = errors.password) !== null && _errors$password !== void 0 && _errors$password.message) {\n      setError('Entered invalid password or email');\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.header,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.input,\n              id: \"email\",\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: styles.input,\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => login('asdsad', 'asdas'),\n            className: styles.button,\n            type: \"button\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n};\n_s(Login, \"CKUFJDt+8uDjgGod4vF4Z65B3AU=\", false, function () {\n  return [useAuthStore, useAuthStore, useAuthStore, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","styles","useAuthStore","useForm","jsxDEV","_jsxDEV","Login","_s","login","state","setError","err","errText","register","handleSubmit","formState","errors","onSubmit","data","_errors$email","_errors$password","email","split","length","includes","message","password","className","main","children","formContainer","header","fileName","_jsxFileName","lineNumber","columnNumber","inputField","label","htmlFor","input","id","name","required","type","onClick","button","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Login.module.scss';\r\nimport useAuthStore from '../../stores/authStore';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\n\r\ntype FormValues = {\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\nconst Login = () => {\r\n    const login = useAuthStore(state => state.login);\r\n    const setError = useAuthStore(state => state.setError);\r\n    const err = useAuthStore(state => state.errText);\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm<FormValues>();\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n        if (data.email.split('@')[1].length < 5 || !data.email.split('@')[1].includes('.')) {\r\n            setError('Entered invalid password or email');\r\n        } else if (errors.email?.message || errors.password?.message) {\r\n            setError('Entered invalid password or email');\r\n\r\n        }\r\n\r\n        return (\r\n            <div className={styles.main}>\r\n                <div className={styles.formContainer}>\r\n                    <h2 className={styles.header}>Login</h2>\r\n                    <form>\r\n                        <div className={styles.inputField}>\r\n                            <label className={styles.label} htmlFor='email'>Email</label>\r\n                            <input className={styles.input} id='email' name='email' required />\r\n                        </div>\r\n                        <div className={styles.inputField}>\r\n                            <label className={styles.label} htmlFor='password'>Password</label>\r\n                            <input className={styles.input} type='password' id='password' name='password' required />\r\n                        </div>\r\n                        <button onClick={() => login('asdsad', 'asdas')} className={styles.button} type='button'>Login</button>\r\n                    </form>\r\n                </div>\r\n                s</div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}