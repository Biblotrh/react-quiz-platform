{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\components\\\\comments\\\\Comments.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './Comments.module.scss';\nimport useTestStore from '../../stores/testStore';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Comments() {\n  _s();\n  var _errors$comment;\n  const getComments = useTestStore(state => state.getComments);\n  const getAnswers = useTestStore(state => state.getAnswers);\n  const createComment = useTestStore(state => state.createComment);\n  const comments = useTestStore(state => state.comments);\n  const testId = useTestStore(state => {\n    var _state$test;\n    return (_state$test = state.test) === null || _state$test === void 0 ? void 0 : _state$test._id;\n  });\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {\n    if (testId) {\n      getComments();\n    }\n  }, [getComments, testId]);\n  const onSubmit = data => {\n    createComment(data.comment);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.commentsSection,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.commentsList,\n      children: comments && comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.comment,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u2014 \", comment.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Your comment\",\n          ...register('comment', {\n            required: 'This field is required'\n          }),\n          className: styles.textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.error,\n          children: ((_errors$comment = errors.comment) === null || _errors$comment === void 0 ? void 0 : _errors$comment.message) && errors.comment.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Comments, \"tSRQGNagFPatXjpkrk6kuDNq+k4=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useTestStore, useTestStore, useForm];\n});\n_c = Comments;\n;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useEffect","styles","useTestStore","useForm","jsxDEV","_jsxDEV","Comments","_s","_errors$comment","getComments","state","getAnswers","createComment","comments","testId","_state$test","test","_id","register","handleSubmit","formState","errors","onSubmit","data","comment","className","commentsSection","children","fileName","_jsxFileName","lineNumber","columnNumber","commentsList","map","author","formSection","placeholder","required","textarea","error","message","type","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/components/comments/Comments.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './Comments.module.scss';\r\nimport useTestStore from '../../stores/testStore';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\n\r\ntype FormValues = {\r\n    comment: string\r\n}\r\n\r\nexport default function Comments() {\r\n    const getComments = useTestStore(state => state.getComments);\r\n    const getAnswers = useTestStore(state => state.getAnswers);\r\n    const createComment = useTestStore(state => state.createComment);\r\n    const comments = useTestStore(state => state.comments);\r\n    const testId = useTestStore(state => state.test?._id);\r\n    const {register, handleSubmit, formState: {errors}} = useForm<FormValues>();\r\n\r\n    useEffect(() => {\r\n        if(testId) {\r\n            getComments();\r\n        }\r\n    }, [getComments, testId]);\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n        createComment(data.comment);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.commentsSection}>\r\n            <h2>Comments</h2>\r\n            <ul className={styles.commentsList}>\r\n                {comments && comments.map((comment) => (\r\n                    <li key={comment._id} className={styles.comment}>\r\n                        <p>{comment.comment}</p>\r\n                        <span>â€” {comment.author}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className={styles.formSection}>\r\n                <h3>Add a Comment</h3>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <textarea\r\n                    placeholder=\"Your comment\"\r\n                    {...register('comment', {required: 'This field is required'})}\r\n                    className={styles.textarea}\r\n                />\r\n                <p className={styles.error}>{errors.comment?.message && errors.comment.message}</p>\r\n                <button type='submit'>\r\n                    Add Comment\r\n                </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}