{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\login\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './Login.module.scss';\nimport useAuthStore from '../../stores/authStore';\nimport { useForm } from 'react-hook-form';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var _errors$email2, _errors$email3, _errors$password2, _errors$password3;\n  const login = useAuthStore(state => state.login);\n  const setError = useAuthStore(state => state.setError);\n  const errorText = useAuthStore(state => state.errText);\n  const isLogged = useAuthStore(state => state.isLogged);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    var _errors$email, _errors$password;\n    if (!data.email.includes('@')) {\n      setError('Entered invalid password or email');\n    } else if (data.email.split('@')[1].length < 5 || !data.email.split('@')[1].includes('.') || data.password.length < 8) {\n      setError('Entered invalid password or email');\n    } else if ((_errors$email = errors.email) !== null && _errors$email !== void 0 && _errors$email.message || (_errors$password = errors.password) !== null && _errors$password !== void 0 && _errors$password.message) {\n      setError('Entered invalid password or email');\n    } else {\n      login(data.email, data.password);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogged ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.header,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('email', {\n                required: 'This field is required'\n              }),\n              className: styles.input,\n              id: \"email\",\n              name: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.message) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: (_errors$email3 = errors.email) === null || _errors$email3 === void 0 ? void 0 : _errors$email3.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.inputField,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: styles.label,\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register('password', {\n                required: 'This field is required'\n              }),\n              className: styles.input,\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }, this), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.message) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.error,\n              children: (_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), errorText ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.error,\n            children: errorText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 34\n          }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"UFcUVIx7sWZUArv/IfxU3gLug/0=\", false, function () {\n  return [useAuthStore, useAuthStore, useAuthStore, useAuthStore, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","styles","useAuthStore","useForm","Navigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","_errors$email2","_errors$email3","_errors$password2","_errors$password3","login","state","setError","errorText","errText","isLogged","register","handleSubmit","formState","errors","mode","onSubmit","data","_errors$email","_errors$password","email","includes","split","length","password","message","children","className","main","formContainer","header","fileName","_jsxFileName","lineNumber","columnNumber","inputField","label","htmlFor","required","input","id","name","error","type","button","to","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './Login.module.scss';\r\nimport useAuthStore from '../../stores/authStore';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\ntype FormValues = {\r\n    email: string,\r\n    password: string,\r\n}\r\n\r\nconst Login = () => {\r\n    const login = useAuthStore(state => state.login);\r\n    const setError = useAuthStore(state => state.setError);\r\n    const errorText = useAuthStore(state => state.errText);\r\n    const isLogged = useAuthStore(state => state.isLogged)\r\n\r\n    const { register, handleSubmit, formState: { errors } } = useForm<FormValues>({\r\n        mode: 'onBlur'\r\n    });\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n        if (!data.email.includes('@')) {\r\n            setError('Entered invalid password or email');\r\n        } else if (data.email.split('@')[1].length < 5 || !data.email.split('@')[1].includes('.') || data.password.length < 8) {\r\n            setError('Entered invalid password or email');\r\n        } else if (errors.email?.message || errors.password?.message) {\r\n            setError('Entered invalid password or email');\r\n        } else {\r\n            login(data.email, data.password);\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        {isLogged ? <div className={styles.main}>\r\n            <div className={styles.formContainer}>\r\n                <h2 className={styles.header}>Login</h2>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={styles.inputField}>\r\n                        <label className={styles.label} htmlFor='email'>Email</label>\r\n                        <input {...register('email', { required: 'This field is required' })}\r\n                            className={styles.input} id='email' name='email' required />\r\n                        {errors.email?.message && <p className={styles.error}>{errors.email?.message}</p>}\r\n                    </div>\r\n                    <div className={styles.inputField}>\r\n                        <label className={styles.label} htmlFor='password'>Password</label>\r\n                        <input {...register('password', { required: 'This field is required' })}\r\n                            className={styles.input} type='password' id='password' name='password' required />\r\n                        {errors.password?.message && <p className={styles.error}>{errors.password?.message}</p>}\r\n                    </div>\r\n                    {errorText ? <p className={styles.error}>{errorText}</p> : ''}\r\n                    <button className={styles.button} type='submit'>Login</button>\r\n                </form>\r\n            </div>\r\n        </div> : <Navigate to={'/'} />\r\n        }</>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}