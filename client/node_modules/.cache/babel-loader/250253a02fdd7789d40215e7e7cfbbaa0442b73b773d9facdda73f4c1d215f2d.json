{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { NavLink, useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const result = useTestStore(state => state.result);\n  const calculateResult = useTestStore(state => state.calculateResult);\n  const params = useParams();\n  const testId = params.id;\n  const {\n    control,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues: {\n      questions: test ? test.questions.map(question => ({\n        question: question.question,\n        answerw: question.answers,\n        selectedAnswer: ''\n      })) : []\n    }\n  });\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, [testId, getTest]);\n  useEffect(() => {\n    if (test) {\n      setValue(\"questions\", test.questions.map(q => ({\n        question: q.question,\n        answers: q.answers,\n        selectedAnswer: ''\n      })));\n    }\n  }, [test, setValue]);\n  const onSubmit = data => {\n    calculateResult(data);\n  };\n  return test ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: test.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [test.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.question,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.answer,\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: `questions.${qIndex}.selectedAnswer`,\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${qIndex}`,\n              value: answer.points,\n              checked: field.value === answer.points,\n              onChange: () => field.onChange(answer.points)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: answer.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }, this)]\n        }, aIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this))]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          className: styles.navLink,\n          to: `/test/${test._id}/result`,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 15\n  }, this);\n}\n_s(TestPage, \"3QYWqMZplgJFptU0Zvkjt4SKXM8=\", false, function () {\n  return [useTestStore, useTestStore, useTestStore, useTestStore, useParams, useForm];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","NavLink","useParams","useTestStore","useForm","Controller","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","result","calculateResult","params","testId","id","control","handleSubmit","setValue","defaultValues","questions","map","question","answerw","answers","selectedAnswer","q","onSubmit","data","className","testPage","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","qIndex","answer","aIndex","render","field","type","value","points","checked","onChange","navLink","to","_id","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\nexport type TestPageFormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const result = useTestStore(state => state.result)\r\n    const calculateResult = useTestStore(state => state.calculateResult)\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const { control, handleSubmit, setValue } = useForm<TestPageFormValues>({\r\n        defaultValues: {\r\n            questions: test ? test.questions.map(question => ({\r\n                question: question.question,\r\n                answerw: question.answers,\r\n                selectedAnswer: ''\r\n            })) : []\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId)\r\n        }\r\n    }, [testId, getTest]);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            setValue(\"questions\", test.questions.map(q => ({\r\n                question: q.question,\r\n                answers: q.answers,\r\n                selectedAnswer: ''\r\n            })));\r\n        }\r\n    }, [test, setValue]);\r\n\r\n    const onSubmit = (data: TestPageFormValues) => {\r\n        calculateResult(data);\r\n    }\r\n\r\n    return (\r\n        test ?\r\n            <div className={styles.testPage} >\r\n                <h1>{test.name}</h1>\r\n                <p>{test.description}</p>\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    {test.questions.map((question, qIndex) => (\r\n                        <div key={qIndex} className={styles.question}>\r\n                            <h3>{question.question}</h3>\r\n                            {question.answers.map((answer, aIndex) => (\r\n                                <div key={aIndex} className={styles.answer}>\r\n                                    <Controller name={`questions.${qIndex}.selectedAnswer`}\r\n                                        control={control}\r\n                                        render={({ field }) => (\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name={`question-${qIndex}`}\r\n                                                value={answer.points}\r\n                                                checked={field.value === answer.points}\r\n                                                onChange={() => field.onChange(answer.points)}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <label>{answer.answer}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n\r\n                    <button type=\"submit\"><NavLink className={styles.navLink} to={`/test/${test._id}/result`}>Submit</NavLink></button>\r\n                </form>\r\n            </div >\r\n            : <div className={styles.testPage}><h1>Loading...</h1></div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}