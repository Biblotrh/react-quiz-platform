{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testForm\\\\TestForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styles from './TestForm.module.scss';\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\n\n/*name: '',\r\ndescription: '',\r\nauthor: '',\r\nquestions: [],\r\nresults: [],\r\nscore: 0,\r\nlikes: 0,\r\ncomments: [],\r\ncreatedAt: new Date(),\r\nisUpdated: []*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestForm() {\n  _s();\n  const {\n    register,\n    control,\n    handleSubmit\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const {\n    fields: questionFields,\n    append: appendQuestion\n  } = useFieldArray({\n    control,\n    name: 'questions'\n  });\n  const {\n    fields: resultFields,\n    append: appendResult\n  } = useFieldArray({\n    control,\n    name: 'results'\n  });\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ...register('name', {\n          required: 'This field is required'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        ...register('description', {\n          required: 'This field is required'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), questionFields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nestedFormGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `questions[${index}].question`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `questions[${index}].question`,\n          ...register(`questions.${index}.question`, {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: `questions[${index}].answers`,\n            ...register(`questions.${index}.answers`, {\n              required: true,\n              setValueAs: v => typeof v === 'string' ? JSON.parse(v) : v\n            }),\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this),\n          name: `questions.${index}.answers`,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => appendQuestion({\n          question: '',\n          answers: []\n        }),\n        children: \"Add question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"Add result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(TestForm, \"ZPhCYRowoTWXP57d8X/BNAxCTP4=\", false, function () {\n  return [useForm, useFieldArray, useFieldArray];\n});\n_c = TestForm;\n;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["React","styles","useForm","useFieldArray","Controller","jsxDEV","_jsxDEV","TestForm","_s","register","control","handleSubmit","mode","fields","questionFields","append","appendQuestion","name","resultFields","appendResult","onSubmit","data","console","log","className","form","children","formGroup","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","required","map","field","index","nestedFormGroup","render","setValueAs","v","JSON","parse","defaultValue","onClick","question","answers","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testForm/TestForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport styles from './TestForm.module.scss';\r\nimport { Answer, IQuestion, Result, Test } from '../../stores/testStore';\r\nimport { useForm, SubmitHandler, useFieldArray, Controller } from 'react-hook-form';\r\n\r\n/*name: '',\r\ndescription: '',\r\nauthor: '',\r\nquestions: [],\r\nresults: [],\r\nscore: 0,\r\nlikes: 0,\r\ncomments: [],\r\ncreatedAt: new Date(),\r\nisUpdated: []*/\r\n\r\ntype FormValues = {\r\n    name: string,\r\n    description: string,\r\n    questions: IQuestion[],\r\n    results: Result[]\r\n}\r\n\r\n\r\nexport default function TestForm() {\r\n    const { register, control, handleSubmit } = useForm<FormValues>({\r\n        mode: 'onBlur'\r\n    });\r\n\r\n    const { fields: questionFields, append: appendQuestion } = useFieldArray({\r\n        control,\r\n        name: 'questions'\r\n    });\r\n    const { fields: resultFields, append: appendResult } = useFieldArray({\r\n        control,\r\n        name: 'results'\r\n    });\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = (data) => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" {...register('name', { required: 'This field is required' })} />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea id=\"description\" {...register('description', { required: 'This field is required' })} />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n                <label>Questions</label>\r\n                {questionFields.map((field, index) => (\r\n                    <div key={field.id} className={styles.nestedFormGroup}>\r\n                        <label htmlFor={`questions[${index}].question`}></label>\r\n                        <input id={`questions[${index}].question`} {...register(`questions.${index}.question`, { required: true })} />\r\n\r\n                        <label>Answers</label>\r\n                        <Controller render={({ field }) => (\r\n                            <textarea id={`questions[${index}].answers`}\r\n                                {...register(`questions.${index}.answers`, {\r\n                                    required: true,\r\n                                    setValueAs: (v) => (typeof v === 'string' ? JSON.parse(v) : v),\r\n                                })}\r\n                                defaultValue='' />\r\n                        )} name={`questions.${index}.answers`}\r\n                            control={control} />\r\n                    </div>\r\n                ))}\r\n                <button type=\"button\" onClick={() => appendQuestion({question: '', answers: []})}>Add question</button>\r\n            </div>\r\n\r\n\r\n            <button type=\"button\">Add result</button>\r\n            <button type=\"submit\">Submit</button>\r\n        </form >\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}