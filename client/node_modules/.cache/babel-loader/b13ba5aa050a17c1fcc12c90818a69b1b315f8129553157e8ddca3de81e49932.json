{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testPage\\\\TestPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport styles from './TestPage.module.scss';\nimport { useParams } from 'react-router-dom';\nimport useTestStore from '../../stores/testStore';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestPage() {\n  _s();\n  const getTest = useTestStore(state => state.getTest);\n  const test = useTestStore(state => state.test);\n  const params = useParams();\n  const testId = params.id;\n  const {\n    control,\n    handleSubmit,\n    setValue\n  } = useForm({\n    defaultValues: {\n      questions: test ? test.questions.map(question => ({\n        question: question.question,\n        answerw: question.answers,\n        selectedAnswer: ''\n      })) : []\n    }\n  });\n  useEffect(() => {\n    if (testId) {\n      getTest(testId);\n    }\n  }, [testId, getTest]);\n  useEffect(() => {\n    if (test) {\n      // Установим значения по умолчанию после загрузки теста\n      setValue(\"questions\", test.questions.map(q => ({\n        question: q.question,\n        answers: q.answers,\n        selectedAnswer: ''\n      })));\n    }\n  }, [test, setValue]);\n  const onSubmit = data => {\n    console.log(data);\n  };\n  return test ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: test.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: test.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [test.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.question,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), question.answers.map((answer, aIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.answer,\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            name: `questions.${qIndex}.selectedAnswer`,\n            control: control,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${qIndex}`,\n              value: answer.points,\n              checked: field.value === answer.points,\n              onChange: () => field.onChange(answer)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: answer.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)]\n        }, aIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this))]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.testPage,\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 48\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 15\n  }, this);\n}\n_s(TestPage, \"ZxM0m7tNM9QQ2jRN77LnlmleqzA=\", false, function () {\n  return [useTestStore, useTestStore, useParams, useForm];\n});\n_c = TestPage;\n;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","styles","useParams","useTestStore","useForm","Controller","jsxDEV","_jsxDEV","TestPage","_s","getTest","state","test","params","testId","id","control","handleSubmit","setValue","defaultValues","questions","map","question","answerw","answers","selectedAnswer","q","onSubmit","data","console","log","className","testPage","children","name","fileName","_jsxFileName","lineNumber","columnNumber","description","qIndex","answer","aIndex","render","field","type","value","points","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testPage/TestPage.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport styles from './TestPage.module.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport useTestStore, { Answer } from '../../stores/testStore';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\ntype Question = {\r\n    question: string;\r\n    answers: Answer[];\r\n    selectedAnswer: string;\r\n}\r\n\r\ntype FormValues = {\r\n    questions: Question[]\r\n}\r\n\r\nexport default function TestPage() {\r\n    const getTest = useTestStore(state => state.getTest);\r\n    const test = useTestStore(state => state.test);\r\n    const params = useParams();\r\n    const testId = params.id;\r\n    const {control, handleSubmit, setValue} = useForm<FormValues>({\r\n        defaultValues: {\r\n            questions: test ? test.questions.map(question => ({\r\n                question: question.question,\r\n                answerw: question.answers,\r\n                selectedAnswer: ''\r\n            })) : []\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (testId) {\r\n            getTest(testId)\r\n        }\r\n    }, [testId, getTest]);\r\n\r\n    useEffect(() => {\r\n        if (test) {\r\n            // Установим значения по умолчанию после загрузки теста\r\n            setValue(\"questions\", test.questions.map(q => ({\r\n                question: q.question,\r\n                answers: q.answers,\r\n                selectedAnswer: ''\r\n            })));\r\n        }\r\n    }, [test, setValue]);\r\n\r\n    const onSubmit = (data: FormValues) => {\r\n        console.log(data);\r\n    }\r\n\r\n    return (\r\n        test ?\r\n            <div className={styles.testPage} >\r\n                <h1>{test.name}</h1>\r\n                <p>{test.description}</p>\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}\r\n                >\r\n                    {test.questions.map((question, qIndex) => (\r\n                        <div key={qIndex} className={styles.question}>\r\n                            <h3>{question.question}</h3>\r\n                            {question.answers.map((answer, aIndex) => (\r\n                                <div key={aIndex} className={styles.answer}>\r\n                                    <Controller name={`questions.${qIndex}.selectedAnswer`}\r\n                                        control={control}\r\n                                        render={({ field }) => (\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name={`question-${qIndex}`}\r\n                                                value={answer.points}\r\n                                                checked={field.value === answer.points}\r\n                                                onChange={() => field.onChange(answer)}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                    <label>{answer.answer}</label>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n\r\n                {/*\r\n                    score !== 0 && (\r\n                        <div className={styles.results}>\r\n                            <h2>Your Score: {score}</h2>\r\n                            {test.results.map((result, index) => (\r\n                                score >= result.minScore && score <= result.maxScore ? (\r\n                                    <div key={index}>\r\n                                        <h3>{result.result}</h3>\r\n                                    </div>\r\n                                ) : null\r\n                            ))}\r\n                        </div>\r\n                    )\r\n                */}\r\n            </div >\r\n            : <div className={styles.testPage}><h1>Loading...</h1></div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}