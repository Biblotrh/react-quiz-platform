{"ast":null,"code":"import { create } from 'zustand';\nimport { devtools } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\nimport API from './../api/axiosConfig';\nconst useAuthStore = create()(devtools(immer((set, get) => ({\n  errText: '',\n  isLogged: false,\n  register: async (email, username, password) => {\n    await API.post(`/auth/register`, {\n      email,\n      username,\n      password\n    });\n  },\n  login: async (email, password) => {\n    await API.post(`/auth/login`, {\n      email,\n      password\n    }).then(data => {\n      console.log(data);\n      if (data.data.accessToken) {\n        localStorage.setItem('token', data.data.accessToken);\n        set({\n          isLogged: true\n        });\n      } else {\n        set({\n          errText: 'Invalid email or password'\n        });\n        set({\n          isLogged: false\n        });\n      }\n    });\n  },\n  logout: async () => {\n    await API.post(`/auth/logout`).then(res => {\n      console.log(res);\n      if (res.data.message === 'success') {\n        localStorage.removeItem('token');\n        set({\n          isLogged: false\n        });\n      } else {\n        console.log('something went wrong');\n      }\n    });\n  },\n  refresh: async () => {\n    await API.get(`/auth/refresh`).then(res => {\n      console.log(res.data.accessToken);\n      if (res.data.accessToken) {\n        localStorage.setItem('token', res.data.accessToken);\n        set({\n          isLogged: true\n        });\n      } else {\n        set({\n          isLogged: false\n        });\n      }\n    }).catch(err => console.log(err));\n  },\n  setError: err => {\n    set({\n      errText: err\n    });\n  },\n  handleIsLogged: val => {\n    set({\n      isLogged: val\n    });\n  }\n}))));\nexport default useAuthStore;","map":{"version":3,"names":["create","devtools","immer","API","useAuthStore","set","get","errText","isLogged","register","email","username","password","post","login","then","data","console","log","accessToken","localStorage","setItem","logout","res","message","removeItem","refresh","catch","err","setError","handleIsLogged","val"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/stores/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { devtools } from 'zustand/middleware';\r\nimport { immer } from 'zustand/middleware/immer';\r\nimport API from './../api/axiosConfig';\r\nimport { AxiosResponse } from 'axios';\r\n\r\ninterface IStore {\r\n    errText: string,\r\n    isLogged: boolean,\r\n    register: (email: string, username: string, password: string) => void,\r\n    login: (email: string, password: string) => void,\r\n    setError: (err: string) => void,\r\n    logout: () => void,\r\n    refresh: () => void,\r\n    handleIsLogged: (val: boolean) => void,\r\n}\r\n\r\nconst useAuthStore = create<IStore>()(devtools(immer((set, get) => ({\r\n    errText: '',\r\n    isLogged: false,\r\n    register: async (email: string, username: string, password: string) => {\r\n        await API.post(`/auth/register`, { email, username, password });\r\n    },\r\n    login: async (email: string, password: string) => {\r\n        await API.post(`/auth/login`, { email, password }).then((data: AxiosResponse<any>) => {\r\n            console.log(data)\r\n            if (data.data.accessToken) {\r\n                localStorage.setItem('token', data.data.accessToken);\r\n                set({isLogged: true});\r\n            } else {\r\n                set({ errText: 'Invalid email or password' });\r\n                set({isLogged: false});\r\n            }\r\n\r\n        });\r\n    },\r\n    logout: async () => {\r\n        await API.post(`/auth/logout`).then(res => {\r\n            console.log(res)\r\n            if(res.data.message === 'success') {\r\n                localStorage.removeItem('token');\r\n                set({isLogged: false});\r\n            } else{\r\n                console.log('something went wrong')\r\n            }\r\n        });\r\n    },\r\n    refresh: async () => {\r\n        await API.get(`/auth/refresh`).then(res => {console.log(res.data.accessToken)\r\n            if(res.data.accessToken) {\r\n                localStorage.setItem('token', res.data.accessToken);\r\n                set({isLogged: true});\r\n            } else {\r\n                set({isLogged: false});\r\n            }\r\n        }).catch(err => console.log(err))\r\n    },\r\n    setError: (err: string) => {\r\n        set({ errText: err });\r\n    },\r\n    handleIsLogged: (val: boolean) => {\r\n        set({isLogged: val});\r\n    } \r\n    \r\n})\r\n),\r\n),\r\n);\r\n\r\nexport default useAuthStore;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,OAAOC,GAAG,MAAM,sBAAsB;AActC,MAAMC,YAAY,GAAGJ,MAAM,CAAS,CAAC,CAACC,QAAQ,CAACC,KAAK,CAAC,CAACG,GAAG,EAAEC,GAAG,MAAM;EAChEC,OAAO,EAAE,EAAE;EACXC,QAAQ,EAAE,KAAK;EACfC,QAAQ,EAAE,MAAAA,CAAOC,KAAa,EAAEC,QAAgB,EAAEC,QAAgB,KAAK;IACnE,MAAMT,GAAG,CAACU,IAAI,CAAC,gBAAgB,EAAE;MAAEH,KAAK;MAAEC,QAAQ;MAAEC;IAAS,CAAC,CAAC;EACnE,CAAC;EACDE,KAAK,EAAE,MAAAA,CAAOJ,KAAa,EAAEE,QAAgB,KAAK;IAC9C,MAAMT,GAAG,CAACU,IAAI,CAAC,aAAa,EAAE;MAAEH,KAAK;MAAEE;IAAS,CAAC,CAAC,CAACG,IAAI,CAAEC,IAAwB,IAAK;MAClFC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACA,IAAI,CAACG,WAAW,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACA,IAAI,CAACG,WAAW,CAAC;QACpDd,GAAG,CAAC;UAACG,QAAQ,EAAE;QAAI,CAAC,CAAC;MACzB,CAAC,MAAM;QACHH,GAAG,CAAC;UAAEE,OAAO,EAAE;QAA4B,CAAC,CAAC;QAC7CF,GAAG,CAAC;UAACG,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC1B;IAEJ,CAAC,CAAC;EACN,CAAC;EACDc,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChB,MAAMnB,GAAG,CAACU,IAAI,CAAC,cAAc,CAAC,CAACE,IAAI,CAACQ,GAAG,IAAI;MACvCN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChB,IAAGA,GAAG,CAACP,IAAI,CAACQ,OAAO,KAAK,SAAS,EAAE;QAC/BJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;QAChCpB,GAAG,CAAC;UAACG,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC1B,CAAC,MAAK;QACFS,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC;IACJ,CAAC,CAAC;EACN,CAAC;EACDQ,OAAO,EAAE,MAAAA,CAAA,KAAY;IACjB,MAAMvB,GAAG,CAACG,GAAG,CAAC,eAAe,CAAC,CAACS,IAAI,CAACQ,GAAG,IAAI;MAACN,OAAO,CAACC,GAAG,CAACK,GAAG,CAACP,IAAI,CAACG,WAAW,CAAC;MACzE,IAAGI,GAAG,CAACP,IAAI,CAACG,WAAW,EAAE;QACrBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEE,GAAG,CAACP,IAAI,CAACG,WAAW,CAAC;QACnDd,GAAG,CAAC;UAACG,QAAQ,EAAE;QAAI,CAAC,CAAC;MACzB,CAAC,MAAM;QACHH,GAAG,CAAC;UAACG,QAAQ,EAAE;QAAK,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC,CAACmB,KAAK,CAACC,GAAG,IAAIX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC,CAAC;EACrC,CAAC;EACDC,QAAQ,EAAGD,GAAW,IAAK;IACvBvB,GAAG,CAAC;MAAEE,OAAO,EAAEqB;IAAI,CAAC,CAAC;EACzB,CAAC;EACDE,cAAc,EAAGC,GAAY,IAAK;IAC9B1B,GAAG,CAAC;MAACG,QAAQ,EAAEuB;IAAG,CAAC,CAAC;EACxB;AAEJ,CAAC,CACD,CACA,CACA,CAAC;AAED,eAAe3B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}