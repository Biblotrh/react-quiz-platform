{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DoC\\\\Desktop\\\\works\\\\ptest\\\\client\\\\src\\\\pages\\\\testForm\\\\TestForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './TestForm.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestForm = () => {\n  _s();\n  const [test, setTest] = useState({\n    name: '',\n    description: '',\n    author: '',\n    questions: [],\n    results: [],\n    score: 0,\n    likes: 0,\n    comments: [],\n    createdAt: new Date(),\n    isUpdated: []\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTest({\n      ...test,\n      [name]: value\n    });\n  };\n\n  // Add more handlers for nested structures if needed\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: test.name,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        value: test.description,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Save Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(TestForm, \"JqTyjHF8bvcnqpxGyGQdGwHkYgg=\");\n_c = TestForm;\nexport default TestForm;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","TestForm","_s","test","setTest","name","description","author","questions","results","score","likes","comments","createdAt","Date","isUpdated","handleInputChange","e","value","target","className","form","children","formGroup","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/DoC/Desktop/works/ptest/client/src/pages/testForm/TestForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './TestForm.module.scss';\r\n\r\ninterface Answer {\r\n    answer: string;\r\n    isRight: boolean;\r\n    points: 0 | 1 | 2 | 3;\r\n}\r\n\r\ninterface Question {\r\n    question: string;\r\n    answers: Answer[];\r\n}\r\n\r\ninterface Result {\r\n    result: string;\r\n    minScore: number;\r\n    maxScore: number;\r\n}\r\n\r\ninterface Test {\r\n    name: string;\r\n    description: string;\r\n    author: string;\r\n    questions: Question[];\r\n    results: Result[];\r\n    score: number;\r\n    likes: number;\r\n    comments: string[];\r\n    createdAt: Date;\r\n    isUpdated: Date[];\r\n}\r\n\r\nconst TestForm: React.FC = () => {\r\n    const [test, setTest] = useState<Test>({\r\n        name: '',\r\n        description: '',\r\n        author: '',\r\n        questions: [],\r\n        results: [],\r\n        score: 0,\r\n        likes: 0,\r\n        comments: [],\r\n        createdAt: new Date(),\r\n        isUpdated: []\r\n    });\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = e.target;\r\n        setTest({ ...test, [name]: value });\r\n    };\r\n\r\n    // Add more handlers for nested structures if needed\r\n\r\n    return (\r\n        <form className={styles.form}>\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" value={test.name} onChange={handleInputChange} required />\r\n            </div>\r\n\r\n            <div className={styles.formGroup}>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea id=\"description\" name=\"description\" value={test.description} onChange={handleInputChange} required />\r\n            </div>\r\n\r\n            {/* Add form groups for other fields as necessary */}\r\n\r\n            <button type=\"submit\">Save Test</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TestForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgC5C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAO;IACnCQ,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE,EAAE;IACVC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAA4D,IAAK;IACxF,MAAM;MAAEZ,IAAI;MAAEa;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCf,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACE,IAAI,GAAGa;IAAM,CAAC,CAAC;EACvC,CAAC;;EAED;;EAEA,oBACIlB,OAAA;IAAMoB,SAAS,EAAEtB,MAAM,CAACuB,IAAK;IAAAC,QAAA,gBACzBtB,OAAA;MAAKoB,SAAS,EAAEtB,MAAM,CAACyB,SAAU;MAAAD,QAAA,gBAC7BtB,OAAA;QAAOwB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClC5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACzB,IAAI,EAAC,MAAM;QAACa,KAAK,EAAEf,IAAI,CAACE,IAAK;QAAC0B,QAAQ,EAAEf,iBAAkB;QAACgB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG,CAAC,eAEN5B,OAAA;MAAKoB,SAAS,EAAEtB,MAAM,CAACyB,SAAU;MAAAD,QAAA,gBAC7BtB,OAAA;QAAOwB,OAAO,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChD5B,OAAA;QAAU8B,EAAE,EAAC,aAAa;QAACzB,IAAI,EAAC,aAAa;QAACa,KAAK,EAAEf,IAAI,CAACG,WAAY;QAACyB,QAAQ,EAAEf,iBAAkB;QAACgB,QAAQ;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9G,CAAC,eAIN5B,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEf,CAAC;AAAC1B,EAAA,CAtCID,QAAkB;AAAAgC,EAAA,GAAlBhC,QAAkB;AAwCxB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}